name: Release on Tag

on:
  push:
    tags:
      - '**'

jobs:
  wait-for-build:
    runs-on: ubuntu-latest
    outputs:
      build_run_id: ${{ steps.get_build.outputs.build_run_id }}
    steps:
      - name: Wait for build workflow to finish
        id: get_build
        uses: actions/github-script@v7
        with:
          script: |
            const tag = process.env.GITHUB_REF_NAME;
            const commit = process.env.GITHUB_SHA;
            const workflowFile = 'build.yml';
            const pollInterval = 10;
            const timeout = 600;

            function sleep(ms) {
              return new Promise(resolve => setTimeout(resolve, ms));
            }

            let foundRun = null;
            let waited = 0;
            while (waited < timeout) {
              const runs = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: workflowFile,
                per_page: 10,
                status: 'completed'
              });
              foundRun = runs.data.workflow_runs.find(run =>
                run.head_sha === commit && run.conclusion === 'success'
              );
              if (foundRun) break;
              await sleep(pollInterval * 1000);
              waited += pollInterval;
            }
            if (!foundRun) {
              core.setFailed(`Timed out waiting for successful build.yml for commit ${commit}`);
            }
            core.setOutput('build_run_id', foundRun.id);

  release:
    needs: wait-for-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download artifact from build workflow
        uses: dawidd6/action-download-artifact@v3
        with:
          run_id: ${{ needs.wait-for-build.outputs.build_run_id }}
          name: wine-shmbridge
          path: ./artifact

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifact to Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./artifact/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
